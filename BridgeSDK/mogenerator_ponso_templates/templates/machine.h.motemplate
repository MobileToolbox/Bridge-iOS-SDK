//
//  _<$generatedObjectClassName$>.h
//
//	Copyright (c) 2014-2019 Sage Bionetworks
//	All rights reserved.
//
//	Redistribution and use in source and binary forms, with or without
//	modification, are permitted provided that the following conditions are met:
//	    * Redistributions of source code must retain the above copyright
//	      notice, this list of conditions and the following disclaimer.
//	    * Redistributions in binary form must reproduce the above copyright
//	      notice, this list of conditions and the following disclaimer in the
//	      documentation and/or other materials provided with the distribution.
//	    * Neither the name of Sage Bionetworks nor the names of BridgeSDk's
//		  contributors may be used to endorse or promote products derived from
//		  this software without specific prior written permission.
//
//	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
//	ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//	DISCLAIMED. IN NO EVENT SHALL SAGE BIONETWORKS BE LIABLE FOR ANY
//	DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
//	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//	LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//	ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//	SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// DO NOT EDIT. This file is machine-generated and constantly overwritten.
// Make changes to <$generatedObjectClassName$>.h instead.
//


#import <Foundation/Foundation.h>
<$if hasCustomSuperentity$>#import <$if hasModuleName$><<$moduleName$>/<$customSuperentity$>.h><$else$>"<$customSuperentity$>.h"<$endif$><$endif$>
<$if hasAdditionalHeaderFile$>
#import <$if hasModuleName$><<$moduleName$>/<$additionalHeaderFileName$>><$else$>"<$additionalHeaderFileName$>"<$endif$>
<$endif$>
<$foreach Attribute noninheritedAttributes do$><$if Attribute.hasTransformableAttributeType$><$if Attribute.userInfo.attributeValueClassName$><$if Attribute.userInfo.importHeaderForClass$>#import <$if hasModuleName$><<$moduleName$>/<$Attribute.userInfo.attributeValueClassName$>.h><$else$>"<$Attribute.userInfo.attributeValueClassName$>.h"<$endif$><BridgeSDK/<$Attribute.userInfo.attributeValueClassName$>.h>
<$endif$><$endif$><$endif$><$endforeach do$>
NS_ASSUME_NONNULL_BEGIN
<$checkNonTransientRelationshipCycles $>
<$foreach Relationship noninheritedRelationships do$><$if ! Relationship.userInfo.notInPONSODictionary $>@class <$Relationship.destinationEntity.generatedObjectClassName$>;
<$endif$><$endforeach do$>

@protocol _<$generatedObjectClassName$>
<$foreach Relationship noninheritedRelationshipsInIDKeyPathTopologicalOrder do$><$if ! Relationship.userInfo.notInPONSODictionary $><$if ! Relationship.isTransient$><$if Relationship.userInfo.destinationEntityIDKeyPath $>
- (<$Relationship.destinationEntity.generatedObjectClassName$> * _Nullable)fetch<$Relationship.destinationEntity.name$>ObjectWithIDFor<$Relationship.name.initialCapitalString$>Relationship:(id)objectID;
<$endif$><$endif$><$endif$><$endforeach do$>
@end


@interface _<$generatedObjectClassName$> : <$customSuperentity$>
<$foreach Attribute noninheritedAttributes do$>
<$if ! Attribute.userInfo.notInPONSODictionary $>
<$if Attribute.isReadonly$>
<$if Attribute.hasDefinedAttributeType$>@property (<$if Attribute.optional$>nullable, <$endif$>nonatomic, strong, readonly) <$Attribute.objectAttributeType$> <$Attribute.name$>;<$endif$>
<$if Attribute.hasScalarAttributeType$>@property (nonatomic, assign, readonly) <$Attribute.scalarAttributeType$> <$Attribute.name$>Value;<$endif$>
<$else$>
<$if Attribute.hasDefinedAttributeType$>@property (<$if Attribute.optional$>nullable, <$endif$>nonatomic, strong) <$Attribute.objectAttributeType$> <$Attribute.name$>;<$endif$>

<$if Attribute.hasScalarAttributeType$>@property (nonatomic, assign) <$Attribute.scalarAttributeType$> <$Attribute.name$>Value;<$endif$>
<$endif$>
<$endif$>
<$endforeach do$>
<$foreach Relationship noninheritedRelationships do$>
<$if ! Relationship.userInfo.notInPONSODictionary $>
<$if Relationship.isToMany$>
<$if Relationship.userInfo.isDictionaryJSON$>
@property (<$if Relationship.optional$>nullable, <$endif$>nonatomic, strong, readonly) NSDictionary *<$Relationship.name$>;
<$else$>
@property (<$if Relationship.optional$>nullable, <$endif$>nonatomic, strong, readonly) NSArray *<$Relationship.name$>;
<$endif$>
<$else$>
<$if Relationship.isTransient $>
@property (<$if Relationship.optional$>nullable, <$endif$>nonatomic, assign, readwrite) <$Relationship.destinationEntity.generatedObjectClassName$> *<$Relationship.name$>;
<$else$>
@property (<$if Relationship.optional$>nullable, <$endif$>nonatomic, strong, readwrite) <$Relationship.destinationEntity.generatedObjectClassName$> *<$Relationship.name$>;
<$endif$>
<$endif$>
<$endif$><$endforeach do$>
<$foreach Relationship noninheritedRelationships do$>
<$if ! Relationship.userInfo.notInPONSODictionary $>
<$if Relationship.isToMany$>- (void)add<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.generatedObjectClassName$>*)value_ settingInverse: (BOOL) setInverse;
- (void)add<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.generatedObjectClassName$>*)value_;
- (void)remove<$Relationship.name.initialCapitalString$>Objects;
- (void)remove<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.generatedObjectClassName$>*)value_ settingInverse: (BOOL) setInverse;
- (void)remove<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.generatedObjectClassName$>*)value_;
<$if Relationship.isOrdered and ! Relationship.userInfo.isDictionaryJSON$>
- (void)insertObject:(<$Relationship.destinationEntity.generatedObjectClassName$>*)value in<$Relationship.name.initialCapitalString$>AtIndex:(NSUInteger)idx;
- (void)removeObjectFrom<$Relationship.name.initialCapitalString$>AtIndex:(NSUInteger)idx;
- (void)insert<$Relationship.name.initialCapitalString$>:(NSArray *)value atIndexes:(NSIndexSet *)indexes;
- (void)remove<$Relationship.name.initialCapitalString$>AtIndexes:(NSIndexSet *)indexes;
- (void)replaceObjectIn<$Relationship.name.initialCapitalString$>AtIndex:(NSUInteger)idx withObject:(<$Relationship.destinationEntity.generatedObjectClassName$>*)value;
- (void)replace<$Relationship.name.initialCapitalString$>AtIndexes:(NSIndexSet *)indexes with<$Relationship.name.initialCapitalString$>:(NSArray *)values;
<$endif$>
<$endif$>
<$endif$><$endforeach do$>
<$foreach Relationship noninheritedRelationships do$><$if ! Relationship.isToMany$><$if ! Relationship.userInfo.notInPONSODictionary $>
- (void) set<$Relationship.name.initialCapitalString$>: (<$Relationship.destinationEntity.generatedObjectClassName$>*<$if Relationship.optional$> _Nullable<$endif$>) <$Relationship.name$>_ settingInverse: (BOOL) setInverse;
<$endif$><$endif$><$endforeach do$>

@end
NS_ASSUME_NONNULL_END
